@import "../theme.scss";

:host([active]) {
    background-color: #FFFFFF11;
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

input[type=number] {
    -moz-appearance: textfield;
}

:host(:first-of-type) {
    border-top: 2px solid $dark-0;
}

:host {
    align-content: center;
    align-items: center;
    border-bottom: 2px solid $dark-0;
    color: $dark-0;
    color: $light-0;
    display: flex;
    font-size: $text-size;
    max-width: 100%;
    position: relative;
}

:host .icon {
    align-items:center;
    background-color: #22222E;
    color: #111111;
    display:flex;
    font-size: 1.4rem;
    height: 4vmin;
    justify-content:center;
    text-shadow: 0 0 10px black;
    width: 4vmin;

    &[data-icon="M"] { color: $red-dark; }
    &[data-icon="m"] { color: $red-light; }
    &[data-icon="V"] { color: $pink-dark; }
    &[data-icon="v"] { color: $pink-light; }
    &[data-icon="H"] { color: $cyan-dark; }
    &[data-icon="h"] { color: $cyan-light; }
    &[data-icon="Z"] { color: $green-light; }
}

:host input {
    @extend %input;
}

:host .number {
    align-items: center;
    display: flex;
    flex-direction: row;
    width: 100%;

    span {
        display: block;
        position: relative;
        right: $spacing;
        text-align: right;
    }

    span, div {
        display: block;
        flex: 0 0 50%;
    }
}

:host .checkbox {
    align-items: center;
    cursor: pointer;
    display: flex;
    padding: $spacing;
    width: 100%;

    span {
        flex: 1;
        padding-left: $spacing;
    }

    .toggle {
        display: block;
        height: 1.8rem;
        width: 3.6rem;
        background-color: #292932;
        position: relative;
        border: 2px solid #292932;
        &::before {
            content: ' ';
            background-color: $active-color;
            display: block;
            height: 1.8rem;
            width: 1.8rem;
            position: absolute;
            box-shadow: 0 0 0.5rem 0 $active-color;
            box-shadow: left 0.1s linear;
        }
        &::after {
            z-index: 10;
            position: absolute;
            top: 0;
            left: 0;
            content: ' ';
            background-color: $dark-2;
            display: block;
            height: 1.8rem;
            width: 1.8rem;
            position: absolute;
            transition: left 0.1s linear;
        }
    }

    .toggle.true::after {
        left: 50%;
    }
    
    .toggle.false::before {
        box-shadow: 0 0 0 0 $blue-light;
    }
}

// Error state for numeric input
:host input:invalid {
    outline: none;
    box-shadow: none;
    color: $red-light;
    background-color: darken($red-dark, 30%);
}

:host .group {
    display: flex;
    flex-direction: column;
    flex: 1;
    max-width: 100%;
    flex-shrink: initial;

    .group {
        flex-direction: row;

        .group {

        }

        input {
            min-width: 0;
            width: 100%;
            -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
            -moz-box-sizing: border-box;    /* Firefox, other Gecko */
            box-sizing: border-box;         /* Opera/IE 8+ */
            margin: 0;
            border: 1px solid transparent;
            &:not(:first-of-type) {
                margin-left: $half-spacing;
            }
        }
    }
}
:host > .group > .group:first-of-type  {
    margin-top: $half-spacing;
}
:host > .group {
    margin-right: $half-spacing
}

:host > .group > .group {
    margin-bottom: $half-spacing;
}

:host > .group > .group > .group + .group {
    margin-left: $half-spacing;
}

::slotted(ui-button),
::slotted(ui-option) {
    margin: 0.5rem;
    align-self: baseline;
}

::slotted(ui-button:not(:first-of-type)) {
    margin-left: 0;
}

::slotted(span) {
    align-items: center;
    color: $light-2;
    display : block;
    flex: 1;
    padding: 0 1vmin;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}